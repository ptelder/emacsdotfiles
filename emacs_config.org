#+TITLE: Emacs Configuration
#+AUTHOR: Kenneth W Brown III

This concept is blatantly ripped off from Daniel Mai. This file assumes Emacs 24 or above.

* Personal Information

I have no idea where this gets used, but the Emacs docs say they're legit... Perhaps they can be fed to default skeletons?

#+begin_src emacs-lisp
(setq user-full-name "Kenneth W Brown III"
      user-mail-address "pliny@ptelder.net")
#+end_src

* Customize settings

Set up the customize file to its own separate file, instead of saving
customize settings in [[file:init.el][init.el]].

#+begin_src emacs-lsp
(setq custom-file (expand-file-name "customize-persistence.el" user-emacs-directory))
(load custom-file)
#+end_src

* Keybinds via bind-key
Use bind-key for... binding keys

#+begin_src emacs-lsp
(require 'bind-key)
#+end_src

* Diminish
Diminished modes are active, but not showy about it.
#+begin_src emacs-lsp
(require 'diminish)
#+end_src

* Themes
** Daniel Mai's theme switch functions

#+begin_src emacs-lisp
(defun switch-theme (theme)
  "Disables any currently active themes and loads THEME."
  ;; This interactive call is taken from `load-theme'
  (interactive
   (list
    (intern (completing-read "Load custom theme: "
                             (mapc 'symbol-name
                                   (custom-available-themes))))))
  (let ((enabled-themes custom-enabled-themes))
    (mapc #'disable-theme custom-enabled-themes)
    (load-theme theme t)))

(defun disable-active-themes ()
  "Disables any currently active themes listed in `custom-enabled-themes'."
  (interactive)
  (mapc #'disable-theme custom-enabled-themes))

(bind-key "s-<f12>" 'switch-theme)
(bind-key "s-<f11>" 'disable-active-themes)
#+end_src


** Personal Theme Setup
*** Birds of Paradise

#+begin_src emacs-lisp
(use-package birds-of-paradise-plus-theme
  :ensure t
  :init
  (progn
    (load-theme 'birds-of-paradise-plus t)))
#+end_src

* Ido and Smex
Helm looks super useful, but I've got enough on my plate just trying to get Emacs itself to stick in my mind.

#+begin_src emacs-lisp
(use-package ido
  :init
  (progn
    (setq ido-enable-flex-matching t)
    (setq ido-everywhere t)
    (ido-mode t)
    (use-package ido-ubiquitous
      :ensure t
      :init (ido-ubiquitous-mode))
    (use-package ido-vertical-mode
      :ensure t
      :init (ido-vertical-mode 1)
      (setq ido-vertical-define-keys 'C-n-and-C-p-only))))
#+end_src

Need to convert these to bind-key
#+begin_src emacs-lisp
(require 'smex) ; Not needed if you use package.el
(smex-initialize) ; Can be omitted. This might cause a (minimal) delay
                  ; when Smex is auto-initialized on its first run.

(global-set-key (kbd "M-x") 'smex)
(global-set-key (kbd "M-X") 'smex-major-mode-commands)
;; This is your old M-x.
(global-set-key (kbd "C-c C-c M-x") 'execute-extended-command)

(use-package smex
  :ensure t
  :bind ("M-x" . smex))
#+end_src


* Installed Packages

  bind-key           20150321.213  installed             A simple way to manage personal keybindings
  diminish           20091203.1012 installed             Diminished modes are minor modes with no modeline display
  nyan-mode          20150128.1218 installed             Nyan Cat shows position in current buffer in mode-line.
  nyan-prompt        20140809.2208 installed             Nyan Cat on the eshell prompt.
  rainbow-blocks     20140306.1033 installed             Block syntax highlighting for lisp code
  rainbow-delimiters 20150320.17   installed             Highlight brackets according to their depth
  rainbow-identif... 20141102.726  installed             Highlight identifiers according to their names
  rainbow-mode       0.11          installed             Colorize color names in buffers
  rich-minority      20150930.517  installed             Clean-up and Beautify the list of minor-modes.
  smart-mode-line    20150803.338  installed             A color coded smart mode-line.
  smex               20150822.1146 installed             M-x interface with Ido-style fuzzy matching.
  use-package        20150926.846  installed             A use-package declaration for simplifying your .emacs

* Customize Settings

 '(ido-mode (quote both) nil (ido))
 '(nyan-animate-nyancat t)
 '(nyan-wavy-trail t)
 '(server-mode t)
 '(uniquify-buffer-name-style (quote post-forward) nil (uniquify)))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 136 :width normal :foundry "adobe" :family "Source Code Pro")))))
